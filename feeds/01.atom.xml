<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>sergem personal public notebook - 01</title><link href="https://serge-m.github.io/" rel="alternate"></link><link href="https://serge-m.github.io/feeds/01.atom.xml" rel="self"></link><id>https://serge-m.github.io/</id><updated>2017-01-08T11:10:00+01:00</updated><entry><title>Shell commands</title><link href="https://serge-m.github.io/shell-commands.html" rel="alternate"></link><published>2017-01-08T11:10:00+01:00</published><updated>2017-01-08T11:10:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2017-01-08:/shell-commands.html</id><summary type="html">&lt;p&gt;Some linux commands, probably for ubuntu/linux mint&lt;/p&gt;
&lt;p&gt;Add user to a group&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo usermod -aG group user
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remove user from a group&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo gpasswd -d user group
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change shell for user &lt;code&gt;user&lt;/code&gt; to bash&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chsh -s /bin/bash user
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Encode/decode binary file to ascii using command line &lt;/p&gt;
&lt;p&gt;&lt;a href="/encodedecode-binary-file-to-ascii.html"&gt;link …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some linux commands, probably for ubuntu/linux mint&lt;/p&gt;
&lt;p&gt;Add user to a group&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo usermod -aG group user
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remove user from a group&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo gpasswd -d user group
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change shell for user &lt;code&gt;user&lt;/code&gt; to bash&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chsh -s /bin/bash user
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Encode/decode binary file to ascii using command line &lt;/p&gt;
&lt;p&gt;&lt;a href="/encodedecode-binary-file-to-ascii.html"&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Restart now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;shutdown -r 0
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;SSH&lt;/h2&gt;
&lt;p&gt;generate key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;generate RSA key of length 4096 to file &lt;code&gt;my_key&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -t rsa -b 4096 -C &amp;quot;your@e-mail.com&amp;quot; -f my_key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Generate md5 fingerprint of the key (works in newer ubuntu, 16):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -lf ./my_key -E md5
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Vim&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.fprintf.net/vimCheatSheet.html"&gt;vimCheatSheet&lt;/a&gt;&lt;/p&gt;</content><category term="linux"></category><category term="useful"></category><category term="ubuntu"></category></entry><entry><title>Add service in ubuntu</title><link href="https://serge-m.github.io/add-service-in-linux.html" rel="alternate"></link><published>2017-01-08T07:10:00+01:00</published><updated>2017-01-08T07:10:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2017-01-08:/add-service-in-linux.html</id><summary type="html">&lt;p&gt;Create a file for service &lt;code&gt;your-service&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;touch /etc/systemd/system/your-service.service 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's assume you want to run docker container there. Put following text in the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Unit]                                                                                                                                                                                                                                        
Description=YourService                                                                                                                                                                                                                           
After=docker.service                                                                                                                                                                                                                          
Requires=docker.service                                                                                                                                                                                                                       

[Service]                                                                                                                                                                                                                                     
TimeoutStartSec=0                                                                                                                                                                                                                             
Restart=always                                                                                                                                                                                                                                
ExecStartPre=-/usr/bin/docker stop %n                                                                                                                                                                                                         
ExecStartPre=-/usr/bin …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Create a file for service &lt;code&gt;your-service&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;touch /etc/systemd/system/your-service.service 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's assume you want to run docker container there. Put following text in the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Unit]                                                                                                                                                                                                                                        
Description=YourService                                                                                                                                                                                                                           
After=docker.service                                                                                                                                                                                                                          
Requires=docker.service                                                                                                                                                                                                                       

[Service]                                                                                                                                                                                                                                     
TimeoutStartSec=0                                                                                                                                                                                                                             
Restart=always                                                                                                                                                                                                                                
ExecStartPre=-/usr/bin/docker stop %n                                                                                                                                                                                                         
ExecStartPre=-/usr/bin/docker rm %n                                                                                                                                                                                                           
ExecStart=/usr/bin/docker run -d -p 8080:8080/tcp --name %n your_docker_image

[Install]                                                                                                                                                                                                                                     
WantedBy=multi-user.target
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here we first stop and delete the docker container. If it doesn't exist we continue ("-" in before the command).&lt;/p&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl enable your-service
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="useful"></category></entry><entry><title>OpenVPN server in cloud using docker</title><link href="https://serge-m.github.io/openvpn-on-vps-using-docker.html" rel="alternate"></link><published>2017-01-07T07:10:00+01:00</published><updated>2017-01-07T07:10:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2017-01-07:/openvpn-on-vps-using-docker.html</id><summary type="html">&lt;p&gt;links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-run-openvpn-in-a-docker-container-on-ubuntu-14-04"&gt;How To Run OpenVPN in a Docker Container on Ubuntu 14.04 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/kylemanna/docker-openvpn"&gt;OpenVPN for Docker&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-run-openvpn-in-a-docker-container-on-ubuntu-14-04"&gt;How To Run OpenVPN in a Docker Container on Ubuntu 14.04 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/kylemanna/docker-openvpn"&gt;OpenVPN for Docker&lt;/a&gt;&lt;/p&gt;</content><category term="linux"></category><category term="docker"></category><category term="vpn"></category></entry><entry><title>Docker in Scaleway's vc1s Ubuntu Xenial</title><link href="https://serge-m.github.io/docker-in-scaleway-vc1s-ubuntu-xenial.html" rel="alternate"></link><published>2017-01-05T07:10:00+01:00</published><updated>2017-01-05T07:10:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2017-01-05:/docker-in-scaleway-vc1s-ubuntu-xenial.html</id><summary type="html">&lt;p&gt;In ubuntu 16.04 image installed on VC1S server I was unable to install docker.
It hangs/fails on installation or on any significant docker command like &lt;code&gt;docker ps&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The error I got was &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Job for docker.service failed because the control process exited with error code. See &amp;quot;systemctl status …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;In ubuntu 16.04 image installed on VC1S server I was unable to install docker.
It hangs/fails on installation or on any significant docker command like &lt;code&gt;docker ps&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The error I got was &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Job for docker.service failed because the control process exited with error code. See &amp;quot;systemctl status docker.service&amp;quot; and &amp;quot;journalctl -xe&amp;quot; for details
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level=error msg=&amp;quot;devmapper: Unable to delete device: devicemapper: Can&amp;#39;t set task name /dev/mapper/docker
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I switched to "docker" image where docker is preinstalled&lt;/p&gt;</content></entry><entry><title>Check server fingerprint for scaleway</title><link href="https://serge-m.github.io/check-server-fingerpring-for-scaleway.html" rel="alternate"></link><published>2017-01-04T07:10:00+01:00</published><updated>2017-01-04T07:10:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2017-01-04:/check-server-fingerpring-for-scaleway.html</id><summary type="html">&lt;p&gt;Run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -H &amp;#39;X-Auth-Token: &amp;lt;YOUR_TOKEN&amp;gt;&amp;#39; https://cp-ams1.scaleway.com/servers/&amp;lt;YOUR_SERVER_ID&amp;gt;/user_data/ssh-host-fingerprints
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;compare output with results of 
ssh &lt;YOUR_USER&gt;@&lt;YOUR_SERVER_IP&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp-ams1&lt;/code&gt; needs to be changed if you use non amsterdam based server.&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://community.online.net/t/no-way-to-verify-ssh-key-fingerprint-exposes-all-servers-to-mitm-attacks/816/5"&gt;community.online.net&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developer.scaleway.com/"&gt;Scaleway API documentation&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -H &amp;#39;X-Auth-Token: &amp;lt;YOUR_TOKEN&amp;gt;&amp;#39; https://cp-ams1.scaleway.com/servers/&amp;lt;YOUR_SERVER_ID&amp;gt;/user_data/ssh-host-fingerprints
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;compare output with results of 
ssh &lt;YOUR_USER&gt;@&lt;YOUR_SERVER_IP&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp-ams1&lt;/code&gt; needs to be changed if you use non amsterdam based server.&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://community.online.net/t/no-way-to-verify-ssh-key-fingerprint-exposes-all-servers-to-mitm-attacks/816/5"&gt;community.online.net&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developer.scaleway.com/"&gt;Scaleway API documentation&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>TIL about PyPy</title><link href="https://serge-m.github.io/til-about-pypy.html" rel="alternate"></link><published>2016-01-08T08:30:00+01:00</published><updated>2016-01-08T08:30:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2016-01-08:/til-about-pypy.html</id><summary type="html">&lt;p&gt;Building from source root using command
&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;pypy_src$ rpython/bin/rpython -Ojit pypy/goal/targetpypystandalone.py&lt;/span&gt;
produces structure with obsolete pypy-c and libpypy-c.so in 
&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;/tmp/usession-release-4.0.1-XXXX/build/pypy-nightly/bin/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Probably pypy compiler places there files  integrated in the src distribution. To get fresh versions I had to use …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Building from source root using command
&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;pypy_src$ rpython/bin/rpython -Ojit pypy/goal/targetpypystandalone.py&lt;/span&gt;
produces structure with obsolete pypy-c and libpypy-c.so in 
&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;/tmp/usession-release-4.0.1-XXXX/build/pypy-nightly/bin/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Probably pypy compiler places there files  integrated in the src distribution. To get fresh versions I had to use pypy-c and libpypy-c.so from sources root.&lt;/p&gt;
&lt;p&gt;UPDATE:
Probably I was completely wrong.
pypy/tool/release/package.py has an option for (not) stripping resulting binary file: "--nostrip". By default it is enabled. Looks like it removed something unused from binaries. This operation updates timestamp of the pypy-c and libpypy-c.so. So probably that was the cause of my misunderstanding.&lt;/p&gt;
&lt;p&gt;Script for packaging and creating virtual environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

rm -rf ./my_builds/ &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 2
mkdir ./my_builds/ &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 3

&lt;span class="nv"&gt;DST_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DST_NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DST_NAME is  empty&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt; 3
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# runs packaging&lt;/span&gt;
./pypy/tool/release/package.py --builddir /home/pypy/builds/ --nostrip --archive-name &lt;span class="nv"&gt;$DST_NAME&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 4

&lt;span class="c1"&gt;# creates a new virtual environment&lt;/span&gt;
virtualenv -p /home/pypy/builds/&lt;span class="nv"&gt;$DST_NAME&lt;/span&gt;/bin/pypy /home/pypy/env/&lt;span class="nv"&gt;$DST_NAME&lt;/span&gt;

&lt;span class="c1"&gt;# installing nose for numpy testing (optional)&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt; /home/pypy/env/&lt;span class="nv"&gt;$DST_NAME&lt;/span&gt;/bin/activate
pip install nose
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;/div&gt;

&lt;/div&gt;</content><category term="python"></category><category term="pypy"></category></entry><entry><title>Installing Ubuntu from USB</title><link href="https://serge-m.github.io/installing-ubuntu-from-usb.html" rel="alternate"></link><published>2015-01-11T16:59:00+01:00</published><updated>2015-01-11T16:59:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2015-01-11:/installing-ubuntu-from-usb.html</id><summary type="html">&lt;p&gt;I use&amp;nbsp; Windows OS and I want to install Ubuntu on another PC.
1. Download software for bootable usb creation
&lt;a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/"&gt;http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/&lt;/a&gt;
2. Download ubuntu image from 
&lt;a href="http://www.ubuntu.com/download/desktop"&gt;http://www.ubuntu.com/download/desktop&lt;/a&gt;
3. According to instructions from &lt;a href="http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows"&gt;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&lt;/a&gt; install image …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I use&amp;nbsp; Windows OS and I want to install Ubuntu on another PC.
1. Download software for bootable usb creation
&lt;a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/"&gt;http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/&lt;/a&gt;
2. Download ubuntu image from 
&lt;a href="http://www.ubuntu.com/download/desktop"&gt;http://www.ubuntu.com/download/desktop&lt;/a&gt;
3. According to instructions from &lt;a href="http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows"&gt;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&lt;/a&gt; install image on usb stick
4. use usb-stick as bootable &lt;/div&gt;&lt;/p&gt;</content><category term="useful"></category><category term="linux"></category></entry><entry><title>VapourSynth: pythonic alternative to avisynth</title><link href="https://serge-m.github.io/vapoursynth-pythonic-alternative-to.html" rel="alternate"></link><published>2014-01-25T21:47:00+01:00</published><updated>2014-01-25T21:47:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2014-01-25:/vapoursynth-pythonic-alternative-to.html</id><summary type="html">&lt;p&gt;What do I know about VapourSynth&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vapoursynth.com/"&gt;http://www.vapoursynth.com/&lt;/a&gt;&amp;nbsp;- website
&lt;h2 style="text-align: left;"&gt;How to save data from VapourSynth&lt;/h2&gt;&lt;div&gt;You need to use vspipe.exe from Vapour distributive&lt;/div&gt;&lt;div&gt;It seems it returns raw data to stdout&lt;/div&gt;&lt;div&gt;&lt;/p&gt;
&lt;p&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Render using ffmpeg&lt;/h3&gt;&lt;div&gt;Don't know how jet&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;&lt;h3&gt;Render using ImageMagick/convert&lt;/h3&gt;&lt;div&gt;Don't know how jet&lt;/div&gt;&lt;div&gt;
&lt;div&gt;&lt;h2&gt;Image …&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;What do I know about VapourSynth&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vapoursynth.com/"&gt;http://www.vapoursynth.com/&lt;/a&gt;&amp;nbsp;- website
&lt;h2 style="text-align: left;"&gt;How to save data from VapourSynth&lt;/h2&gt;&lt;div&gt;You need to use vspipe.exe from Vapour distributive&lt;/div&gt;&lt;div&gt;It seems it returns raw data to stdout&lt;/div&gt;&lt;div&gt;&lt;/p&gt;
&lt;p&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Render using ffmpeg&lt;/h3&gt;&lt;div&gt;Don't know how jet&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;&lt;h3&gt;Render using ImageMagick/convert&lt;/h3&gt;&lt;div&gt;Don't know how jet&lt;/div&gt;&lt;div&gt;
&lt;div&gt;&lt;h2&gt;Image Reading&lt;/h2&gt;&lt;/div&gt;&lt;div&gt;Image reading causes crash of AvsPmod, in which I using Vapoursynth&lt;/div&gt;&lt;div&gt;&lt;a href="http://forum.doom9.org/showthread.php?t=166088"&gt;http://forum.doom9.org/showthread.php?t=166088&lt;/a&gt;&lt;/div&gt;&lt;div&gt;src:&amp;nbsp;&lt;a href="https://github.com/chikuzen/vsimagereader&amp;quot; target=&amp;quot;_blank"&gt;https://github.com/chikuzen/vsimagereader&lt;/a&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;h2 style="text-align: left;"&gt;Other&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;
AvsPmod - new version of AvsP. AvsP is a tabbed avs editor with convenient results preview.
&lt;a href="http://avspmod.github.io/"&gt;http://avspmod.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In version 2.4.0 temporary support of vapour scripts was added to AvsPmod (&lt;a href="http://forum.doom9.org/showthread.php?t=153248"&gt;http://forum.doom9.org/showthread.php?t=153248&lt;/a&gt;)
And it's true.&lt;/p&gt;
&lt;p&gt;My first working script:&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color: #cccccc; font-family: Courier New, Courier, monospace;"&gt;import vapoursynth as vs #include vapour module&lt;/span&gt;
&lt;span style="background-color: #cccccc; font-family: 'Courier New', Courier, monospace;"&gt;
&lt;/span&gt;&lt;span style="background-color: #cccccc; font-family: 'Courier New', Courier, monospace;"&gt;core = vs.get_core() # some core loading&lt;/span&gt;
&lt;span style="background-color: #cccccc; font-family: Courier New, Courier, monospace;"&gt;
&lt;/span&gt;&lt;span style="background-color: #cccccc; font-family: Courier New, Courier, monospace;"&gt;src = core.avisource.AVISource('frm.avi') # opening frm.avi&lt;/span&gt;
&lt;span style="background-color: #cccccc; font-family: Courier New, Courier, monospace;"&gt;
&lt;/span&gt;&lt;span style="background-color: #cccccc; font-family: Courier New, Courier, monospace;"&gt;# it doesn't work without whis line and&lt;/span&gt;
&lt;span style="background-color: #cccccc; font-family: Courier New, Courier, monospace;"&gt;# prints error message "Avisynth open failure:&amp;nbsp;&lt;/span&gt;
&lt;span style="background-color: #cccccc;"&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;#&amp;nbsp;&lt;/span&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;VFW module doesn't &lt;/span&gt;&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;support RGB24 output"&lt;/span&gt;&lt;/span&gt;
&lt;span style="background-color: #cccccc; font-family: Courier New, Courier, monospace;"&gt;ret = core.resize.Bicubic(src, format=vs.COMPATBGR32)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color: #cccccc; font-family: Courier New, Courier, monospace;"&gt;ret.set_output()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Interesting bug:
For RGB24 avi file it outputs image flipped vertically:
&lt;img alt="" src="http://1.bp.blogspot.com/-BDcligyliF4/UuP7V5bdfQI/AAAAAAAAAb4/4RDbCzqMlUg/s1600/avspmod_vapoursynth.png"&gt;In YUV format it's ok.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/avxsynth/avxsynth/wiki"&gt;AvxSynth&lt;/a&gt;&amp;nbsp;- linux port of Avisynth&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/chikuzen/VapourSource"&gt;https://github.com/chikuzen/VapourSource&lt;/a&gt;&amp;nbsp;- avisynth plugin for loading VapourSynth scripts
&lt;div&gt;
It seems VapourSynth developer is little bit crazy: he wants everysthing be in C instead of C++ (http://www.vapoursynth.com/2012/11/vapoursynth-tasks/)&lt;/p&gt;
&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</content><category term="vapoursynth"></category><category term="avisynth"></category></entry><entry><title>Tables in Latex. Multiline, right alignment</title><link href="https://serge-m.github.io/tables-in-latex-multiline-right.html" rel="alternate"></link><published>2014-01-23T19:56:00+01:00</published><updated>2014-01-23T19:56:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2014-01-23:/tables-in-latex-multiline-right.html</id><summary type="html">&lt;p&gt;I used _tabularx _package.
Additional definitions:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    \usepackage{array}
    \newcolumntype{L}{&amp;gt;{\raggedright\arraybackslash}X} % left multiline alignment
    \newcolumntype{R}{&amp;gt;{\raggedleft\arraybackslash}X}  % right multiline alignment
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    \begin{tabularx}{\textwidth}{@{}p{0.8\linewidth} R}
     Text, aligned to the left, without margin \newline
     Tex in the same cell on the next line …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I used _tabularx _package.
Additional definitions:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    \usepackage{array}
    \newcolumntype{L}{&amp;gt;{\raggedright\arraybackslash}X} % left multiline alignment
    \newcolumntype{R}{&amp;gt;{\raggedleft\arraybackslash}X}  % right multiline alignment
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    \begin{tabularx}{\textwidth}{@{}p{0.8\linewidth} R}
     Text, aligned to the left, without margin \newline
     Tex in the same cell on the next line   
     &amp;amp;amp;                                          % next column delimiter
     Text aligned to the right \newline second line
    \end{tabularx}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here we have one columt with 80% width and one column with right alignment
&lt;code&gt;@{}&lt;/code&gt; is required to suppress left margin in the first column.&lt;/p&gt;
&lt;p&gt;Results: &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://2.bp.blogspot.com/-FnKmZNbaKzc/UuE7hyGuRsI/AAAAAAAAAbY/emmCbjp1Qqg/s1600/latex_table__tabularx_right_alignment_multiline.png"&gt;&lt;/p&gt;</content><category term="latex"></category></entry><entry><title>How?</title><link href="https://serge-m.github.io/how.html" rel="alternate"></link><published>2014-01-17T20:59:00+01:00</published><updated>2014-01-17T20:59:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2014-01-17:/how.html</id><summary type="html">&lt;p&gt;How does start menu in Win7 select the most useless new application i've installed?&lt;/p&gt;</summary><content type="html">&lt;p&gt;How does start menu in Win7 select the most useless new application i've installed?&lt;/p&gt;</content></entry><entry><title>Building ConEmu</title><link href="https://serge-m.github.io/building-conemu.html" rel="alternate"></link><published>2014-01-16T20:56:00+01:00</published><updated>2014-01-16T20:56:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2014-01-16:/building-conemu.html</id><summary type="html">&lt;div style="text-align: left;"&gt;Problems with ConEmu building from&amp;nbsp;&lt;/div&gt;

&lt;div style="text-align: left;"&gt;https://github.com/Maximus5/ConEmu.git v14.01.06&lt;/div&gt;

&lt;div style="text-align: left;"&gt;in Visual Studio 2010&lt;/div&gt;

&lt;h4 style="text-align: left;"&gt;ConEmuC&lt;/h4&gt;

&lt;p&gt;unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;wsprintfA&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;- add additional dependency&amp;nbsp;&lt;strong&gt;User32.lib&lt;/strong&gt;
&lt;b&gt;
&lt;/b&gt;
&lt;h4 style="text-align: left;"&gt;&lt;strong&gt;ConEmuCD&lt;/strong&gt;&lt;/h4&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;3&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;CharUpperBuffW@8&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;4&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;MapVirtualKeyW@8 …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align: left;"&gt;Problems with ConEmu building from&amp;nbsp;&lt;/div&gt;

&lt;div style="text-align: left;"&gt;https://github.com/Maximus5/ConEmu.git v14.01.06&lt;/div&gt;

&lt;div style="text-align: left;"&gt;in Visual Studio 2010&lt;/div&gt;

&lt;h4 style="text-align: left;"&gt;ConEmuC&lt;/h4&gt;

&lt;p&gt;unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;wsprintfA&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;- add additional dependency&amp;nbsp;&lt;strong&gt;User32.lib&lt;/strong&gt;
&lt;b&gt;
&lt;/b&gt;
&lt;h4 style="text-align: left;"&gt;&lt;strong&gt;ConEmuCD&lt;/strong&gt;&lt;/h4&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;3&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;CharUpperBuffW@8&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;4&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;MapVirtualKeyW@8&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;5&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;VkKeyScanW@4&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;6&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;GetSystemMetrics@4&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;7&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;IsRectEmpty@4&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;8&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;MonitorFromRect@8&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;9&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;GetMonitorInfoW@8&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;10&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;MonitorFromWindow@8&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;11&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;SystemParametersInfoW@16&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
etc.&lt;/p&gt;
&lt;p&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;101&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK1120: 98 unresolved externals&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;add&amp;nbsp;&lt;strong&gt;User32.lib&lt;/strong&gt; to reduce number of warnings from 99 to 32&lt;/p&gt;
&lt;p&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;3&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;LogonUserW@24
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;4&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;RegCreateKeyExW@36&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;5&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;RegQueryValueExW@24
Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;6&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;CreateCompatibleDC@4&lt;/p&gt;
&lt;p&gt;add&amp;nbsp;&lt;strong&gt;advapi32.lib&amp;nbsp;&lt;/strong&gt;to reduce number of warnings from 32 to 14
&lt;div&gt;
&lt;/div&gt;&lt;div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;3&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;SHGetFolderPathW@20&lt;/div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;4&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;ShellExecuteExW@4&lt;/div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;5&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;ShellExecuteW@24&lt;/div&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;add gdi32.lib to reduce number of errors from 14 to 3.&lt;/div&gt;&lt;div&gt;add shell32.lib to reduce number of errors to 0&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;h4 style="text-align: left;"&gt;ConEmuHk&lt;/h4&gt;&lt;div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;3&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;CharUpperBuffW@8&lt;/div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;4&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;MapVirtualKeyW@8&lt;/div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;5&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;VkKeyScanW@4&lt;/div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;6&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;GetCursorPos@4&lt;/div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;7&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;MapVirtualKeyExW@12&lt;/div&gt;&lt;/div&gt;&lt;div&gt;.....&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;Add&amp;nbsp;User32.lib to reduce from 20 to 4:&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;3&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;RegOpenKeyExW@20&lt;/div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;4&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;RegCloseKey@4&lt;/div&gt;&lt;div&gt;Error&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;5&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;error LNK2001: unresolved external symbol &lt;code&gt;__imp__&lt;/code&gt;LogonUserW@24&lt;/div&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;Add&amp;nbsp;advapi32.lib to fix all&lt;/div&gt;&lt;div&gt;&lt;/p&gt;
&lt;h4 style="text-align: left;"&gt;Bonus:&lt;/h4&gt;

&lt;p&gt;&lt;/div&gt;&lt;div&gt;links to Russian habrahabr:&lt;/div&gt;&lt;div&gt;http://habrahabr.ru/company/epam_systems/blog/204368/&lt;/div&gt;&lt;div&gt;&lt;/p&gt;</content><category term="c++"></category><category term="tools"></category><category term="software"></category><category term="dll"></category><category term="visual studio"></category></entry><entry><title>Free software for screen video capture</title><link href="https://serge-m.github.io/free-software-for-screen-video-capture.html" rel="alternate"></link><published>2014-01-15T19:11:00+01:00</published><updated>2014-01-15T19:11:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2014-01-15:/free-software-for-screen-video-capture.html</id><summary type="html">&lt;h2&gt;CamStudio 2.7&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://camstudio.org/"&gt;http://camstudio.org/&lt;/a&gt; works fine&lt;/p&gt;
&lt;h2&gt;Rylstim-Screen-Recorder&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.sketchman-studio.com/rylstim-screen-recorder/"&gt;http://www.sketchman-studio.com/rylstim-screen-recorder/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There were some troubles while recording ConEmu software 
Portable version is available&lt;/p&gt;
&lt;h2&gt;HyperCam 2&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.hyperionics.com/hc/"&gt;http://www.hyperionics.com/hc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Works well&lt;/p&gt;</summary><content type="html">&lt;h2&gt;CamStudio 2.7&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://camstudio.org/"&gt;http://camstudio.org/&lt;/a&gt; works fine&lt;/p&gt;
&lt;h2&gt;Rylstim-Screen-Recorder&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.sketchman-studio.com/rylstim-screen-recorder/"&gt;http://www.sketchman-studio.com/rylstim-screen-recorder/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There were some troubles while recording ConEmu software 
Portable version is available&lt;/p&gt;
&lt;h2&gt;HyperCam 2&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.hyperionics.com/hc/"&gt;http://www.hyperionics.com/hc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Works well&lt;/p&gt;</content><category term="tools"></category><category term="freeware"></category></entry><entry><title>Temporary files format that can be deleted from project of Visual Studio 2010</title><link href="https://serge-m.github.io/temporary-files-format-that-can-be.html" rel="alternate"></link><published>2014-01-14T12:36:00+01:00</published><updated>2014-01-14T12:36:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2014-01-14:/temporary-files-format-that-can-be.html</id><summary type="html">&lt;p&gt;Add to .gitignore:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*.ipch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Debug&lt;/li&gt;
&lt;li&gt;Release&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*.sdf&lt;/code&gt; - The SDF file is your code browsing database which uses SQL Sever Compact Edition. You don't need to copy this SDF file while you move your project, and it will be automatically populated in the new location once you open your project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[&lt;a href="http://social.msdn.microsoft.com/Forums/en-US/20fee924-e267-4c1a-b0fe-3321f86e1bb5/sdf-file?forum=vcprerelease&amp;quot; target=&amp;quot;_blank"&gt;1 …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Add to .gitignore:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*.ipch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Debug&lt;/li&gt;
&lt;li&gt;Release&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*.sdf&lt;/code&gt; - The SDF file is your code browsing database which uses SQL Sever Compact Edition. You don't need to copy this SDF file while you move your project, and it will be automatically populated in the new location once you open your project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[&lt;a href="http://social.msdn.microsoft.com/Forums/en-US/20fee924-e267-4c1a-b0fe-3321f86e1bb5/sdf-file?forum=vcprerelease&amp;quot; target=&amp;quot;_blank"&gt;1&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;[&lt;a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/1ef46540-e4b8-4779-8403-49239bc3f7ee/is-it-safe-to-delete-ipch-folder-precompiled-headers?forum=vcgeneral&amp;quot; target=&amp;quot;_blank"&gt;2&lt;/a&gt;]&lt;/p&gt;</content><category term="c++"></category><category term="2010"></category><category term="git"></category><category term="visual studio"></category></entry><entry><title>Migrating from SVN to Git and Mercurial</title><link href="https://serge-m.github.io/migrating-from-svn-to-git.html" rel="alternate"></link><published>2014-01-08T18:14:00+01:00</published><updated>2014-01-08T18:14:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2014-01-08:/migrating-from-svn-to-git.html</id><summary type="html">&lt;p&gt;There is a lot of answers here:
http://stackoverflow.com/questions/79165/how-to-migrate-svn-with-history-to-a-new-git-repository&lt;/p&gt;
&lt;p&gt;I found rather useful &lt;a href="http://stackoverflow.com/a/9316931&amp;quot; target=&amp;quot;_blank"&gt;this one&lt;/a&gt;.
A guy made a script according to proposed instructions: https://github.com/onepremise/SGMS&lt;/p&gt;
&lt;p&gt;This script will convert projects stored in SVN with the following format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/trunk
  /Project1
  /Project2
/branches
     /Project1 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;There is a lot of answers here:
http://stackoverflow.com/questions/79165/how-to-migrate-svn-with-history-to-a-new-git-repository&lt;/p&gt;
&lt;p&gt;I found rather useful &lt;a href="http://stackoverflow.com/a/9316931&amp;quot; target=&amp;quot;_blank"&gt;this one&lt;/a&gt;.
A guy made a script according to proposed instructions: https://github.com/onepremise/SGMS&lt;/p&gt;
&lt;p&gt;This script will convert projects stored in SVN with the following format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/trunk
  /Project1
  /Project2
/branches
     /Project1
     /Project2
/tags
 /Project1
 /Project2
This scheme is also popular and supported as well:

/Project1
     /trunk
     /branches
     /tags
/Project2
     /trunk
     /branches
     /tags
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Each project will get synchronized over by project name:&lt;/p&gt;
&lt;p&gt;Ex: &lt;code&gt;./migration https://svnurl.com/basepath project1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you wish to convert the full repo over, use the following syntax:&lt;/p&gt;
&lt;p&gt;Ex: &lt;code&gt;./migration https://svnurl.com/basepath .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I tested on the second structure type and it works. The question is only about saving merge structure. It seems it was lost. :( 
Branches are ok, but merged revisions are not marked as merged. In other words every revision has single parent&lt;/p&gt;
&lt;h2&gt;Other solutions:&lt;/h2&gt;
&lt;p&gt;https://github.com/nirvdrum/svn2git&lt;/p&gt;
&lt;p&gt;http://blog.tfnico.com/2011/12/git-svn-mirror-product-subgit.html&lt;/p&gt;
&lt;p&gt;I haven't tested them.&lt;/p&gt;
&lt;h2&gt;Backup SVN&lt;/h2&gt;
&lt;p&gt;if the repository is not local. Dump whole repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;svnrdump dump https://&amp;lt;your svn repo path&amp;gt;/ &amp;gt; dump.dump
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then create a new local repo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;svnadmin create newrepo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;loading dump to local repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;svnadmin load newrepo &amp;lt; dump.dump
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I had a problem with loading (there was some internal error while loading more than 8000 revisions, so i try to make it another way).
You can dump in several files if you specify revisions ranges:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;svnrdump dump  https://&amp;lt;your svn repo path&amp;gt;/ -r 0:1000 &amp;gt; dump0000-1000.dump
svnrdump dump  https://&amp;lt;your svn repo path&amp;gt;/ -r 1001:2000 --incremental &amp;gt; dump1001-2000-incremental.dump
svnrdump dump  https://&amp;lt;your svn repo path&amp;gt;/ -r 2001:3000 --incremental &amp;gt; dump2001-3000-incremental.dump
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All dumps except the first are incremental&lt;/p&gt;
&lt;p&gt;then create a new local repo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;svnadmin create newrepo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then loading:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;svnadmin load newrepo &amp;lt; dump0001-1000.dump
svnadmin load newrepo &amp;lt; dump1001-2000-incremental.dump
svnadmin load newrepo &amp;lt; dump2001-3000-incremental.dump
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;SVN server on localhost&lt;/h2&gt;
&lt;p&gt;I used VisualSVN Server to make local SVN server.
It seems Hg cannot load SVN repo from local file, but it can work with local server.
I added a new user, copied ready newrepo to a directory where VisualSVN Server stores repositories, assigned permissions to the repo and it worked.&lt;/p&gt;
&lt;h2&gt;Migrating to Hg&lt;/h2&gt;
&lt;p&gt;in russian: http://pdrobushevich.blogspot.ru/2010/10/hgsubversion.html&lt;/p&gt;
&lt;p&gt;Finally I found solution for windows.
Install TortoiseHg.
Install &amp;nbsp;hgsubversion as a plugin to Tortoise. To do this, clone repository of hgsubversion somewhere. I cloned into D:/hgsvn:
&lt;strong&gt;hg.exe clone http://bitbucket.org/durin42/hgsubversion/ D:/hgsvn&lt;/strong&gt;
In &lt;strong&gt;D:/hgsvn&lt;/strong&gt; there is a folder &lt;strong&gt;hgsubversion&lt;/strong&gt;. That is our target.&lt;/p&gt;
&lt;p&gt;Then register plugin for TortoiseHg. Find &lt;strong&gt;mercurial.ini&lt;/strong&gt;&amp;nbsp;in home user directory and edit it. In section &lt;strong&gt;extensions&lt;/strong&gt;
add line&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hgsubversion = D:\hgsvn\hgsubversion
``

It must look like this:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[extensions]
hgsubversion =&amp;nbsp;&lt;strong&gt;D:\hgsvn*&lt;/strong&gt;&lt;em&gt;hgsubversion&lt;/em&gt;*&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Now if you open &amp;amp;nbsp;TortoiseHg-&amp;gt;Global Settings-&amp;gt;Extentions, you see the plugin was installed
![](http://3.bp.blogspot.com/_a4Q2DEgLPvg/TMwD5BGK9uI/AAAAAAAAAUc/XxBxaQztH8k/s1600/extentions.JPG)


Now you can just clone local SVN repository as Hg repo:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;hg clone --verbose -- http://127.0.0.1/svn/&lt;repo&gt; D:\&lt;repo&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;### Errors
I had following error while cloning using TortoiseHg:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;EditingError: trying to open a deleted file
```
It seems the problem is gone when I close TortoiseHg and use command line
I spent a lot of time trying to understand the cause. It seems there is a bug of simultaneous work of gui and console.&lt;/p&gt;</content><category term="useful"></category><category term="mercurial"></category><category term="git"></category><category term="svn"></category></entry><entry><title>Things about C++</title><link href="https://serge-m.github.io/things-about-c.html" rel="alternate"></link><published>2014-01-06T13:28:00+01:00</published><updated>2014-01-06T13:28:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2014-01-06:/things-about-c.html</id><summary type="html">&lt;ol style="text-align: left;"&gt;&lt;li&gt;rules for resolving calls to overloaded functions:&amp;nbsp;&lt;/li&gt;- &lt;li&gt;identify the function that's the best match for the call (name, parameters etc)&lt;/li&gt;&lt;li&gt;checks accessibility for the best-match function.&lt;/li&gt;
&lt;/ol&gt;

&lt;div&gt;
&lt;/div&gt;

&lt;div&gt;&lt;h2 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 15pt;"&gt;Resolving function overloads (my)&lt;/h2&gt;&lt;/div&gt;

&lt;div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="http://4.bp.blogspot.com/-QLJfqdOD7GI/UuKOhiNr9CI/AAAAAAAAAbo/zxi4-98NBwY/s1600/functionsOverloadingSchemeCPP.png"&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;&lt;h2 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 15pt;"&gt;Resolving function overloads&lt;/h2&gt;&lt;/div&gt;&lt;div&gt;src:&lt;a href="http://www.dcs.bbk.ac.uk/~roger/cpp/week20.htm&amp;quot; target=&amp;quot;_blank"&gt;http://www.dcs.bbk.ac.uk/~roger/cpp/week20.htm&lt;/a&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;The compiler works through the following …&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><content type="html">&lt;ol style="text-align: left;"&gt;&lt;li&gt;rules for resolving calls to overloaded functions:&amp;nbsp;&lt;/li&gt;- &lt;li&gt;identify the function that's the best match for the call (name, parameters etc)&lt;/li&gt;&lt;li&gt;checks accessibility for the best-match function.&lt;/li&gt;
&lt;/ol&gt;

&lt;div&gt;
&lt;/div&gt;

&lt;div&gt;&lt;h2 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 15pt;"&gt;Resolving function overloads (my)&lt;/h2&gt;&lt;/div&gt;

&lt;div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="http://4.bp.blogspot.com/-QLJfqdOD7GI/UuKOhiNr9CI/AAAAAAAAAbo/zxi4-98NBwY/s1600/functionsOverloadingSchemeCPP.png"&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;&lt;h2 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 15pt;"&gt;Resolving function overloads&lt;/h2&gt;&lt;/div&gt;&lt;div&gt;src:&lt;a href="http://www.dcs.bbk.ac.uk/~roger/cpp/week20.htm&amp;quot; target=&amp;quot;_blank"&gt;http://www.dcs.bbk.ac.uk/~roger/cpp/week20.htm&lt;/a&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;The compiler works through the following checklist and if it still can't reach a decision, it issues an error:&lt;/div&gt;&lt;ol style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;&lt;li&gt;Gather all the functions in the current scope that have the same name as the function called.&lt;/li&gt;&lt;li&gt;Exclude those that don't have the right number of parameters to match the arguments in the call. (It has to be careful about parameters with default values;&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;void f(int x, int y = 0)&lt;/code&gt;&amp;nbsp;is a candidate for the call&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;f(25);&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;If no function matches, the compiler reports an error.&lt;/li&gt;&lt;li&gt;If there is more than one match, select the 'best match'.&lt;/li&gt;&lt;li&gt;If there is no clear winner of the best matches, the compiler reports an error - ambiguous function call.&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;h3 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13pt; text-align: left;"&gt;Best matching&lt;/h3&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;In deciding on the best match, the compiler works on a rating system for the way the types passed in the call and the competing parameter lists match up. In decreasing order of goodness of match:&lt;/div&gt;&lt;ol style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;&lt;li&gt;An exact match, e.g. argument is a double and parameter is a double&lt;/li&gt;&lt;li&gt;A promotion&lt;/li&gt;&lt;li&gt;A standard type conversion&lt;/li&gt;&lt;li&gt;A constructor or user-defined type conversion&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;h3 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13pt;"&gt;Exact matches&lt;/h3&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;An exact match is where the parameter and argument datatypes match exactly. Note that, for the purposes of overload resolution a pointer to an array of type x exactly matches a pointer of type x. This is because arrays are always passed by reference, meaning that you actually pass a pointer to the first element of the array. For example:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;void f(int y[ ]);    // call this f1
void f(int* z);      // call this f2
....
int x[ ] = {1, 2, 3, 4};
f(x);         // Both f1 and f2 are exact matches, so the call is ambiguous.&lt;/p&gt;
&lt;p&gt;void sf(const char s[]);
void sf(const char*);
....
sf("abc");   // Same problem; both sf functions are exact matches.
&lt;/pre&gt;&lt;h3 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13pt;"&gt;Type promotion&lt;/h3&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;The following are described as "promotions":&lt;/div&gt;&lt;ul style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;&lt;li&gt;A&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;char&lt;/code&gt;,&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;unsigned&lt;/code&gt;&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;char&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;short&lt;/code&gt;&amp;nbsp;can be promoted to an&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;int&lt;/code&gt;. For example&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;void f(int);&lt;/code&gt;&amp;nbsp;can be a match for&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;f('a');&lt;/code&gt;&lt;/li&gt;&lt;li&gt;A&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;float&lt;/code&gt;&amp;nbsp;can be promoted to a&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;double&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;A&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;bool&lt;/code&gt;&amp;nbsp;can be promoted to an&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;int&lt;/code&gt;&amp;nbsp;(FALSE counts as 0, TRUE as 1).&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13pt;"&gt;Standard conversions&lt;/h3&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;All the following are described as "standard conversions":&lt;/div&gt;&lt;ul style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;&lt;li&gt;conversions between integral types, apart from the ones counted as promotions. Remember that&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;bool&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;char&lt;/code&gt;&amp;nbsp;are integral types as well as&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;int&lt;/code&gt;,&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;short&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;long&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;conversions between floating types:&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;double&lt;/code&gt;,&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;float&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;long double&lt;/code&gt;, except for&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;float&lt;/code&gt;&amp;nbsp;to&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;double&lt;/code&gt;&amp;nbsp;which counts as a promotion.&lt;/li&gt;&lt;li&gt;conversions between floating and integral types&lt;/li&gt;&lt;li&gt;conversions of integral, floating and pointer types to&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;bool&lt;/code&gt;&amp;nbsp;(zero or NULL is FALSE, anything else is TRUE)&lt;/li&gt;&lt;li&gt;conversion of an integer zero to the&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;NULL&lt;/code&gt;&amp;nbsp;pointer.&lt;/li&gt;&lt;/ul&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;All of the standard conversions are treated as equivalent for scoring purposes. A seemingly minor standard conversion, such as&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;int&lt;/code&gt;&amp;nbsp;to&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;long&lt;/code&gt;, does not count as any "better" than a more drastic one such as&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;double&lt;/code&gt;&amp;nbsp;to&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;bool&lt;/code&gt;.&lt;/div&gt;&lt;h3 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13pt;"&gt;Constructors and user-defined conversions&lt;/h3&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;A certain kind of constructor can play a special role in type conversion. Suppose you had a class&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;Bigint&lt;/code&gt;&amp;nbsp;that was capable of storing integral numbers larger than INT_MAX, and you had a constructor for a&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;Bigint&lt;/code&gt;&amp;nbsp;that took a C-string, so that a declaration of a&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;Bigint&lt;/code&gt;&amp;nbsp;object might look like this:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;Bigint b("12345678901234567890");
&lt;/pre&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;This constructor also provides an implicit type conversion. Having defined&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;b&lt;/code&gt;&amp;nbsp;as a&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;Bigint&lt;/code&gt;, it would be possible to say, for example:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;b = "999999999999";
&lt;/pre&gt;&lt;span style="background-color: #ffffcc; font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;or you could invoke the type-conversion explicitly:&lt;/span&gt;
&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;b = static_cast&lt;Bigint&gt;("88888888888");
&lt;/pre&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;The same type-conversion would be used in parameter passing, enabling us to do this:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;void f(Bigint);&lt;/p&gt;
&lt;p&gt;f("77777777777777");
&lt;/pre&gt;&lt;span style="background-color: #ffffcc; font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;We are able to pass a C-string to a function that expects a Bigint because there exists a Bigint constructor that takes a C-string.&lt;/span&gt;
&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;This kind of conversion can only work when the constructor can be called with just one argument. Generally this means that the constructor will have just one parameter, but it could have more if all but the first of the parameters (or, indeed, all of them) had default values.&lt;/div&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;When you think about using this type-conversion in assignment, it is obvious that the constructor must be of the kind that can be called with only one argument. In the statement:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;b = something;
&lt;/pre&gt;&lt;span style="background-color: #ffffcc; font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;the "something" can't be nothing, and it can't be more than one thing.&lt;/span&gt;
&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;In the context of parameter passing, the compiler has to be able to find a parameter for each argument. It would not consider&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;void f(Bigint)&lt;/code&gt;&amp;nbsp;as a candidate for&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;f("6666666", 57);&lt;/code&gt;&amp;nbsp;even if the Bigint class had a constructor that took a C-string and an int - the compiler needs one parameter for the "6666666" and another for the 57.&lt;/div&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;The compiler also has to find an argument for each parameter that is not given an explicit default in the function header, so it would not consider&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;void f(Bigint)&lt;/code&gt;&amp;nbsp;as a candidate for&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;f();&lt;/code&gt;&amp;nbsp;even if Bigint had a constructor with no parameters or a constructor with all its parameters defaulted. (It would, however, consider&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;void f(Bigint b = "0")&lt;/code&gt;&amp;nbsp;as a candidate for&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;f();&lt;/code&gt;&amp;nbsp;since the parameter of the function&amp;nbsp;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 10pt; line-height: 10pt;"&gt;f&lt;/code&gt;&amp;nbsp;(as opposed to the parameter of the Bigint constructor) has an explicit default.)&lt;/div&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;These "conversion constructors" enable us to have object parameters corresponding to arguments of other types.&lt;/div&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;User-defined conversions&lt;/strong&gt;&amp;nbsp;are for going the other way. They enable us to pass objects (as arguments) to functions with parameters of other types, as in the following:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;void f(int n);&lt;/p&gt;
&lt;p&gt;Bigint b("123456");
f(b);                // would work if there was a Bigint::operator int() conversion function
&lt;/pre&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;Conversion member-functions allow you to specify how you want objects to respond if they are asked to behave as if they were objects of some other type. In this case, a Bigint is being treated as if it were an int. A conversion function that allowed the above code to work might take the form:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;class Bigint
{ public:
  ...
  operator int();    // returns a Bigint as an int.
  ...                // Note there is no return type and no parameter list.
};&lt;/p&gt;
&lt;p class="....."&gt;Bigint::operator int()
{  If the value of the Bigint is less than INT_MAX,
        return the value as an int,
   else return -1;   // or throw an exception or something
}&lt;/pre&gt;&lt;h3 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13pt;"&gt;explicit&lt;/h3&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;It can happen that you have a constructor that can be called with just one argument, and which will therefore behave as a conversion constructor, but you don't want it to behave in this way. Perhaps we have a Bigint constructor that takes a string. This would mean that you could write something like:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;Bigint b;
b = "987654321";
&lt;/pre&gt;&lt;span style="background-color: #ffffcc; font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;But implicit type-conversions are a common source of programming error, so you might decide to disallow that sort of conversion. We can do that simply by inserting the keyword&amp;nbsp;&lt;/span&gt;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 13px; line-height: 10pt;"&gt;explicit&lt;/code&gt;&lt;span style="background-color: #ffffcc; font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;&amp;nbsp;before the constructor prototype in the class definition:&lt;/span&gt;
&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;class Bigint
{ public:
 ......
 explicit Bigint(string);
 ......
};
&lt;/pre&gt;&lt;span style="background-color: #ffffcc; font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;With that&amp;nbsp;&lt;/span&gt;&lt;code style="color: #990099; font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 13px; line-height: 10pt;"&gt;explicit&lt;/code&gt;&lt;span style="background-color: #ffffcc; font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;&amp;nbsp;before the constructor, we cannot now make use of implicit type-conversion from C-string to Bigint:&lt;/span&gt;
&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;void proc(Bigint);
Bigint b;
b = "99999999999";  // Error! Implicit type conversion not allowed
proc("9999999999999");  // not allowed
b = static_cast&lt;Bigint&gt;("999999999999");  // OK, type conversion explicit
proc(Bigint("999999999999"));  // OK
&lt;/pre&gt;&lt;h3 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13pt;"&gt;A note on const ref parameters&lt;/h3&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;Suppose that the Bigint class had a constructor that took an int. It would then be possible to pass an int to a function that expected a Bigint:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;void proc(Bigint bx)&lt;/p&gt;
&lt;p class="....."&gt;proc(54321);
&lt;/pre&gt;&lt;span style="background-color: #ffffcc; font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;The parameter here was a value parameter. Would it have made any difference if the parameter had been a const ref, i.e.&lt;/span&gt;
&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;void proc(const Bigint&amp;amp; bx)&lt;/p&gt;
&lt;p&gt;proc(54321);
&lt;/pre&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;At first sight, this looks rather strange. When you pass an argument by reference, the parameter name becomes an alternative to the argument name - two names for the same thing. But here, we are not passing anything that has a name; we are simply passing a value. To put it more technically, the argument has an r-value but not an l-value (you could use it on the right-hand side of an assignment but not on the left-hand side). There is, apparently, nothing for bx to refer to.&lt;/div&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;But in fact it would work. When you pass an argument that has an l-value to a const ref parameter, you get the ordinary call-by-reference (except, obviously, that the parameter is const). When you pass an argument that has only an r-value, a temporary variable is created with the same type as the parameter, and the const ref parameter refers to this temporary variable. So, in this example, a temporary variable of type Bigint is created, the value 54321 is used to initialise it, and this is the object to which bx refers. The temporary variable disappears when proc terminates. (In other words, when the argument has no l-value, the const ref parameter behaves very like a value parameter.)&lt;/div&gt;&lt;h3 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13pt;"&gt;Parameter lists that include default values&lt;/h3&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;Parameters with default values carry their full weight in the scoring of a function. For example:&lt;/div&gt;&lt;pre style="background-color: #ffcc99; border: 2px rgb(255, 255, 204); font-family: 'Lucida Console', Courier, 'Courier New', monospace; font-size: 9pt; line-height: 9pt; padding: 3px; width: 1889px;"&gt;void f (int x, double y, int z = 2);   // (f1)
void f (int x, int y);                 // (f2)
...
f(3, 4.5); // matches f1 exactly, whereas f2 requires a double-to-int standard conversion
&lt;/pre&gt;&lt;h3 style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13pt;"&gt;Choosing a winner&lt;/h3&gt;&lt;div style="font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 13px;"&gt;A candidate function is only as strong as its weakest match; a candidate requiring three promotions, for example, beats a candidate with two exact matches and a standard conversion. Candidates whose weakest matches are equivalently weak are compared on their next-weakest, and so on - a candidate with a standard conversion, a promotion and an exact match beats a candidate with a standard conversion and two promotions.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/p&gt;</content><category term="c++"></category></entry><entry><title>Private inheritance</title><link href="https://serge-m.github.io/private-inheritance.html" rel="alternate"></link><published>2014-01-06T12:49:00+01:00</published><updated>2014-01-06T12:49:00+01:00</updated><author><name>SergeM</name></author><id>tag:serge-m.github.io,2014-01-06:/private-inheritance.html</id><summary type="html">&lt;p&gt;Example from Meyers "Effective C++"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt; {
    &lt;span class="n"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;explicit&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt;(&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;tickFrequency&lt;/span&gt;);
    &lt;span class="n"&gt;virtual&lt;/span&gt; &lt;span class="nb"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onTick&lt;/span&gt;() &lt;span class="n"&gt;const&lt;/span&gt;; // &lt;span class="n"&gt;Called&lt;/span&gt; &lt;span class="n"&gt;automatically&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;each&lt;/span&gt; &lt;span class="n"&gt;tic&lt;/span&gt;,&lt;span class="sr"&gt; &lt;/span&gt;
&lt;span class="sr"&gt;    //&lt;/span&gt; &lt;span class="n"&gt;onTick&lt;/span&gt;() &lt;span class="n"&gt;must&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;redefined&lt;/span&gt; &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;things&lt;/span&gt;
    ...
    };


    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Widget:&lt;/span&gt; &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt; { // &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;inheritance&lt;/span&gt;
    &lt;span class="n"&gt;private:&lt;/span&gt;
    &lt;span class="n"&gt;virtual&lt;/span&gt; &lt;span class="nb"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onTick&lt;/span&gt;() &lt;span class="n"&gt;const&lt;/span&gt;; // &lt;span class="n"&gt;redefined&lt;/span&gt; &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="k"&gt;make&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;
    ... 
    };
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now clients of Widget get interface …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Example from Meyers "Effective C++"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt; {
    &lt;span class="n"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;explicit&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt;(&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;tickFrequency&lt;/span&gt;);
    &lt;span class="n"&gt;virtual&lt;/span&gt; &lt;span class="nb"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onTick&lt;/span&gt;() &lt;span class="n"&gt;const&lt;/span&gt;; // &lt;span class="n"&gt;Called&lt;/span&gt; &lt;span class="n"&gt;automatically&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;each&lt;/span&gt; &lt;span class="n"&gt;tic&lt;/span&gt;,&lt;span class="sr"&gt; &lt;/span&gt;
&lt;span class="sr"&gt;    //&lt;/span&gt; &lt;span class="n"&gt;onTick&lt;/span&gt;() &lt;span class="n"&gt;must&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;redefined&lt;/span&gt; &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;things&lt;/span&gt;
    ...
    };


    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Widget:&lt;/span&gt; &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt; { // &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;inheritance&lt;/span&gt;
    &lt;span class="n"&gt;private:&lt;/span&gt;
    &lt;span class="n"&gt;virtual&lt;/span&gt; &lt;span class="nb"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onTick&lt;/span&gt;() &lt;span class="n"&gt;const&lt;/span&gt;; // &lt;span class="n"&gt;redefined&lt;/span&gt; &lt;span class="nb"&gt;to&lt;/span&gt; &lt;span class="k"&gt;make&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;
    ... 
    };
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now clients of Widget get interface untouched and required job is done&lt;/p&gt;
&lt;p&gt;Example of protecting method from redefinition in derived classes:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Widget&lt;/span&gt; {
    &lt;span class="n"&gt;private:&lt;/span&gt;
        &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;WidgetTimer:&lt;/span&gt; &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt; {
        &lt;span class="n"&gt;public:&lt;/span&gt;
            &lt;span class="n"&gt;virtual&lt;/span&gt; &lt;span class="nb"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onTick&lt;/span&gt;() &lt;span class="n"&gt;const&lt;/span&gt;;
            ...
        };
        &lt;span class="n"&gt;WidgetTimer&lt;/span&gt; &lt;span class="n"&gt;timer&lt;/span&gt;;
        ...
    };
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Classes derived from Widget unable to redefine onClick. Analogue of &lt;strong&gt;final&lt;/strong&gt; in Java and &lt;strong&gt;sealed&lt;/strong&gt; in C#&lt;/p&gt;</content><category term="c++"></category></entry></feed>