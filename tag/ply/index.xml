<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ply on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/ply/</link>
    <description>Recent content in ply on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 Nov 2020 20:00:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/ply/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Point cloud processing</title>
      <link>https://serge-m.github.io/posts/point-cloud-processing/</link>
      <pubDate>Tue, 10 Nov 2020 20:00:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/point-cloud-processing/</guid>
      <description>ROS nodes Point Cloud IO https://github.com/ANYbotics/point_cloud_io
two nodes for reading and writing PointCloud2 from/to ply, pcd formats point_cloud_assembler from laser_assembler http://wiki.ros.org/laser_assembler
This node assembles a stream of sensor_msgs/PointCloud2 messages into larger point clouds. The aggregated point cloud can be accessed via a call to assemble_scans service.
https://github.com/ros-perception/laser_assembler
Tutorial
Octomap http://octomap.github.io/
Seems like a standard solution to convert point clouds to a map in several formats
pointcloud_to_laserscan http://wiki.ros.org/pointcloud_to_laserscan
pcl_ros http://wiki.ros.org/pcl_ros
This package provides interfaces and tools for bridging a running ROS system to the Point Cloud Library.</description>
    </item>
    
  </channel>
</rss>
