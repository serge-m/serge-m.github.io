<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pytest on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/pytest/</link>
    <description>Recent content in pytest on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 02 Jan 2018 22:50:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/pytest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pytest cheatsheet</title>
      <link>https://serge-m.github.io/posts/pytest-cheatsheet/</link>
      <pubDate>Tue, 02 Jan 2018 22:50:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/pytest-cheatsheet/</guid>
      <description>Pytest is a powerful tool for testing in python. Here are some notes about hands-on experience.
Running tests in pytest with/without a specified mark Execute
pytest -m &amp;#34;integration&amp;#34; if you want to run only tests that have &amp;ldquo;@pytest.mark.integration&amp;rdquo; annotation.
Similarly you can run only tests that don&amp;rsquo;t are not marked.
pytest -m &amp;#34;not your_mark&amp;#34; That command will test everything that is not marked as &amp;ldquo;your_mark&amp;rdquo;.
How to verify exception message using pytest One can use context manager pytest.</description>
    </item>
    
    <item>
      <title>Run docker as pytest fixture</title>
      <link>https://serge-m.github.io/posts/run-docker-as-pytest-fixture/</link>
      <pubDate>Mon, 19 Dec 2016 21:30:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/run-docker-as-pytest-fixture/</guid>
      <description>I need to test external API or perform integration test for my application. The extenal application can be accessible through docker image. I want to write a test that has
docker run as set-up step docker stop/docker rm as tear down step As an example lets consider Seaweedfs as external API. SeaweedFS is a simple and highly scalable distributed file system. To run it you need to run master and slave images.</description>
    </item>
    
    <item>
      <title>Testing json responses in Flask REST apps with pytest</title>
      <link>https://serge-m.github.io/posts/testing-json-responses-in-flask-rest-apps-with-pytest/</link>
      <pubDate>Sun, 27 Nov 2016 22:47:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/testing-json-responses-in-flask-rest-apps-with-pytest/</guid>
      <description>Testing is an essential part of software developmnet process. Unfortunately best prictives for python are established not as good as for example in Java world. Here I try to explain how to test Flask-based web applications. We want to test endpoints behaviour including status codes and parameters encoding. It means testing of handler functions for those endpoints is not enough.
Tests for endpoints can be considered/used as high-level acceptance tests.</description>
    </item>
    
    <item>
      <title>Useful python links</title>
      <link>https://serge-m.github.io/posts/useful-python-links/</link>
      <pubDate>Sat, 08 Oct 2016 01:10:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/useful-python-links/</guid>
      <description>Books Test-Driven Development with Python Harry Percival
Python Testing with unittest, nose, pytest : eBook
Testing Python: Applying Unit Testing, TDD, BDD and Acceptance Testing link .
Videos Outside-In TDD Harry Percival, PyCon 2016
Докеризация веб приложения на Python, Антон Егоров
Thinking about Concurrency, Raymond Hettinger, Python core developer
Tutorials Разработка идеального pypi пакета с поддержкой разных версий python (Rus), 2020.
The Little Book of Python Anti-Patterns - an awesome collection of best practices with examples.</description>
    </item>
    
  </channel>
</rss>
