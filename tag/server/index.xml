<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>server on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/server/</link>
    <description>Recent content in server on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 23 May 2017 22:50:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/server/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Streaming camera output from Raspberry Pi</title>
      <link>https://serge-m.github.io/posts/streaming-camera-output-from-raspberry-pi/</link>
      <pubDate>Tue, 23 May 2017 22:50:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/streaming-camera-output-from-raspberry-pi/</guid>
      <description>Task was to transmit image from camera on raspberry pi through web interface to the PC. PC is connected to raspberry through local network.
 Enable camera on your raspberry pi in raspi-conf. Reboot. Save the following source code to a file on your raspberry (let&amp;rsquo;s say streaming.py) do sudo pip3 install picamera run python3 streaming.py on the target machine (PC) go to http://&amp;lt;your raspberry ip or host name&amp;gt;:8000. output from the camera must be streaming in realtime.</description>
    </item>
    
    <item>
      <title>Rest API for TensorFlow model</title>
      <link>https://serge-m.github.io/posts/rest-api-for-tensorflow-model/</link>
      <pubDate>Sun, 21 May 2017 22:00:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/rest-api-for-tensorflow-model/</guid>
      <description>TensorFlow Serving, sources - library for serving machine learning models. Written in C++ and Python. Server is in C++. Requires Bazel - Google&amp;rsquo;s build tool. Doesn&amp;rsquo;t work with python 3. Probably fast.
TensorFlow: How to freeze a model and serve it with a python API
Building a Machine Learning App with AWS Lambda (slides)
Pipeline.io - End-to-End, Continuous Spark ML + Tensorflow AI Data Pipelines, Sources
Interesting thread. They propose to use &amp;ldquo;saved_model_cli binary (in tools/), which you can feed a SavedModel, and pass input data via files.</description>
    </item>
    
  </channel>
</rss>
