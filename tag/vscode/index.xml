<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vscode on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/vscode/</link>
    <description>Recent content in vscode on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 23 May 2021 12:30:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IDE for Rust</title>
      <link>https://serge-m.github.io/posts/ide-for-rust/</link>
      <pubDate>Sun, 23 May 2021 12:30:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/ide-for-rust/</guid>
      <description>I started to learn rust, and I needed to set up some IDE to handle my exercises. It seems that VScode has pretty good support for Rust.
How to set up VS code to work with rust, including debugging. Install rust-analyzer extension and vscode-lldb extension:
code --install-extension matklad.rust-analyzer code --install-extension vadimcn.vscode-lldb rust-analyzer provides a nice UI for running binaries and tests:
Also it gives a lot of hints:
Note that rust-analyzer doesn&amp;rsquo;t work together with Rust extension (Rust for Visual Studio Code).</description>
    </item>
    
    <item>
      <title>C&#43;&#43; and CMake</title>
      <link>https://serge-m.github.io/posts/cpp-and-cmake/</link>
      <pubDate>Thu, 26 Mar 2020 07:00:23 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/cpp-and-cmake/</guid>
      <description>CMake in VSCode =============================== VSCode is a free open source IDE with a lot of nice features. In addition one can chose from a variety of extensions. Looks like Cmake-tools kind of works, but the hotkeys and some settings are far from intuitive. In my previous attempt I ended up removing ``cmake tools`` plugin and moving forward with custom task.json and launch.json scripts. Here is a template I made back then.</description>
    </item>
    
  </channel>
</rss>
