<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>books on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/books/</link>
    <description>Recent content in books on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 20 May 2017 22:00:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/books/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Math explained and visualized</title>
      <link>https://serge-m.github.io/posts/math-exmplined-and-visualized/</link>
      <pubDate>Sat, 20 May 2017 22:00:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/math-exmplined-and-visualized/</guid>
      <description>Here I will collect links to well-written articles about math and algorithms.
Visual Information Theory. Nice post about probabilities, entropy. The whole blog has awesome visualizations. Highly recommended.
MNIST For ML Beginners - Nice introduction into machine learning with TensorFlow
Brilliantly wrong - blog by Alex Rogozhnikov, with fantastic visualizations of many algorithms and concepts
Collection of data science notebooks.
Deconvolution and Checkerboard Artifacts by Odena, et al., 2016 - explanation of deconvolution operation in neural networks with awesome interactive visualizations</description>
    </item>
    
    <item>
      <title>Machine learning links</title>
      <link>https://serge-m.github.io/posts/machine-learning-links/</link>
      <pubDate>Thu, 19 Jan 2017 14:10:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/machine-learning-links/</guid>
      <description>Super harsh guide to machine Learning Super harsh guide to machine learning (reddit)
 First, read fucking Hastie, Tibshirani, and whoever. Chapters 1-4 and 7. If you don&amp;rsquo;t understand it, keep reading it until you do.
You can read the rest of the book if you want. You probably should, but I&amp;rsquo;ll assume you know all of it.
Take Andrew Ng&amp;rsquo;s Coursera. Do all the exercises in Matlab and python and R.</description>
    </item>
    
    <item>
      <title>Books</title>
      <link>https://serge-m.github.io/posts/books/</link>
      <pubDate>Fri, 29 Nov 2013 10:33:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/books/</guid>
      <description>In progress   Test-Driven Development with Python Harry Percival link Pycon 2016 workshop
  Python Testing Python Software Development and Software Testing (posts and podcast) book
   Part  Effective C++: 55 Specific Ways to Improve Your Programs and Designs Scott Meyers   Done   Fooled by Randomness: The Hidden Role of Chance in Life and in the Markets Nassim Nicholas Taleb
  Learning Spark.</description>
    </item>
    
  </channel>
</rss>
