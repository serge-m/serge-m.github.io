<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/docker/</link>
    <description>Recent content in docker on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 07 Jan 2017 07:10:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenVPN server in cloud using docker</title>
      <link>https://serge-m.github.io/posts/openvpn-on-vps-using-docker/</link>
      <pubDate>Sat, 07 Jan 2017 07:10:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/openvpn-on-vps-using-docker/</guid>
      <description>links:
How To Run OpenVPN in a Docker Container on Ubuntu 14.04 
OpenVPN for Docker
Connection via OPenVPN is slow for https Try the following advice The udp connection is perfect with these parameters (in client config):
mssfix 1200 tun-mtu 1200 DNS doesn&amp;rsquo;t work through VPN Symptoms: Openvpn connects, you can ping web sites by IP address, but you cannot ping them by name (like ping google.com)
Solution:
This is a bug that&amp;rsquo;s fixed in upstream NetworkManager.</description>
    </item>
    
    <item>
      <title>Run docker as pytest fixture</title>
      <link>https://serge-m.github.io/posts/run-docker-as-pytest-fixture/</link>
      <pubDate>Mon, 19 Dec 2016 21:30:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/run-docker-as-pytest-fixture/</guid>
      <description>I need to test external API or perform integration test for my application. The extenal application can be accessible through docker image. I want to write a test that has
 docker run as set-up step docker stop/docker rm as tear down step  As an example lets consider Seaweedfs as external API. SeaweedFS is a simple and highly scalable distributed file system. To run it you need to run master and slave images.</description>
    </item>
    
  </channel>
</rss>
