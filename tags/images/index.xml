<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>images on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/images/</link>
    <description>Recent content in images on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 May 2017 07:11:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/images/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Combine images to PDF in linux</title>
      <link>https://serge-m.github.io/posts/combine-images-to-pdf/</link>
      <pubDate>Wed, 03 May 2017 07:11:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/combine-images-to-pdf/</guid>
      <description>Using convert utility we can join multiple image files (png, jpeg, pdf) into one pdf.
convert -density 250 file1.pdf file2.JPG file3.pdf -compress JPEG -quality 70 combined.pdf we use JPEG compression with quality =90 for images inside PDF. Otherwise the PDF will be too large.
source</description>
    </item>
    
    <item>
      <title>Image processing in Python</title>
      <link>https://serge-m.github.io/posts/image-processing-in-python/</link>
      <pubDate>Sun, 15 Jan 2017 07:10:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/image-processing-in-python/</guid>
      <description>Image search using elastic search   Comparison of Image Search Performance using different kinds of vectors
  Plugin for elastic search
  Personalizing image search with feature vectors and Lucene (video)
  Operations on images in python How to set thresholds for Canny edge detector in openCV Zero-parameter, automatic Canny edge detection with Python and OpenCV
1 2 3 4 5 6 7 8 9 10 11  def auto_canny(image, sigma=0.</description>
    </item>
    
    <item>
      <title>Setting default parameters for imshow in pyplot</title>
      <link>https://serge-m.github.io/posts/setting-default-parameters-from-imshow/</link>
      <pubDate>Sun, 23 Nov 2014 22:29:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/setting-default-parameters-from-imshow/</guid>
      <description>I find default visualization settings for images in matplotlib inconvenient. Usually I prefer to see images in grayscale color map and without smoothing. Thus I see actual data without distortions. Grayscale is easier to understand.
1 2 3  import matplotlib.pyplot as plt plt.rcParams[&amp;#39;image.cmap&amp;#39;] = &amp;#39;gray&amp;#39; plt.rcParams[&amp;#39;image.interpolation&amp;#39;] = &amp;#39;nearest&amp;#39;   Compare default colors and interpolation:
and after applying the settings:</description>
    </item>
    
  </channel>
</rss>
