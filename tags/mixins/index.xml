<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mixins on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/mixins/</link>
    <description>Recent content in mixins on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://serge-m.github.io/tags/mixins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mixin pattern in Python</title>
      <link>https://serge-m.github.io/posts/mixins-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/mixins-in-python/</guid>
      <description>Design pattern Mixin is often used in python. There are two main situations where mixins are used 1:
You want to provide a lot of optional features for a class. You want to use one particular feature in a lot of different classes. Order of mixins definition Order in which you use mixins defines the behaviour. Quote from 2:
in Python the class hierarchy is defined right to left, so in this case the Mixin2 class is the base class, extended by Mixin1 and finally by BaseClass.</description>
    </item>
    
  </channel>
</rss>
