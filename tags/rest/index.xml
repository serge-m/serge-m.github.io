<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>REST on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/rest/</link>
    <description>Recent content in REST on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 21 May 2017 22:00:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/rest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rest API for TensorFlow model</title>
      <link>https://serge-m.github.io/posts/rest-api-for-tensorflow-model/</link>
      <pubDate>Sun, 21 May 2017 22:00:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/rest-api-for-tensorflow-model/</guid>
      <description>TensorFlow Serving, sources - library for serving machine learning models. Written in C++ and Python. Server is in C++. Requires Bazel - Google&amp;rsquo;s build tool. Doesn&amp;rsquo;t work with python 3. Probably fast.
TensorFlow: How to freeze a model and serve it with a python API
Building a Machine Learning App with AWS Lambda (slides)
Pipeline.io - End-to-End, Continuous Spark ML + Tensorflow AI Data Pipelines, Sources
Interesting thread. They propose to use &amp;ldquo;saved_model_cli binary (in tools/), which you can feed a SavedModel, and pass input data via files.</description>
    </item>
    
    <item>
      <title>Testing json responses in Flask REST apps with pytest</title>
      <link>https://serge-m.github.io/posts/testing-json-responses-in-flask-rest-apps-with-pytest/</link>
      <pubDate>Sun, 27 Nov 2016 22:47:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/testing-json-responses-in-flask-rest-apps-with-pytest/</guid>
      <description>Testing is an essential part of software developmnet process. Unfortunately best prictives for python are established not as good as for example in Java world. Here I try to explain how to test Flask-based web applications. We want to test endpoints behaviour including status codes and parameters encoding. It means testing of handler functions for those endpoints is not enough.
Tests for endpoints can be considered/used as high-level acceptance tests.</description>
    </item>
    
  </channel>
</rss>
