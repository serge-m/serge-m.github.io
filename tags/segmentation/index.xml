<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>segmentation on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/segmentation/</link>
    <description>Recent content in segmentation on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 14 Nov 2019 07:28:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/segmentation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Image segmentation with unlabeled areas with fast.ai</title>
      <link>https://serge-m.github.io/posts/image-segmentation-with-unlabeled-areas-with-fast-ai/</link>
      <pubDate>Thu, 14 Nov 2019 07:28:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/image-segmentation-with-unlabeled-areas-with-fast-ai/</guid>
      <description>fast.ai library has a pretty easy to use yet powerful capabilities for semantic image segmentation. By default all the classes are treated the same. The network is trained to predict all the labels.
Sometimes it&amp;rsquo;s important to provide non-complete labeling. That means for some areas the label is undefined. The performance of the network should exclude that areas in the loss and accuracy computation. That allows the network predict any other class in those areas.</description>
    </item>
    
  </channel>
</rss>
