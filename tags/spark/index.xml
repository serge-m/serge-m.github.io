<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spark on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/spark/</link>
    <description>Recent content in spark on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Feb 2019 18:37:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/spark/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jupyter notebooks on EMR</title>
      <link>https://serge-m.github.io/posts/jupyter-notebooks-on-emr/</link>
      <pubDate>Mon, 04 Feb 2019 18:37:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/jupyter-notebooks-on-emr/</guid>
      <description>Explanatory data analysis requires interactive code execution. In case of spark and emr it is very convenient to run the code from jupyter notebooks on a remote cluster. EMR allows installing jupyter on the spark master. In order to do that configure &amp;quot;Applications&amp;quot; field for the emr cluster to contain also jupyter hub. For example:
&amp;#34;Applications&amp;#34;: [ { &amp;#34;Name&amp;#34;: &amp;#34;Ganglia&amp;#34;, &amp;#34;Version&amp;#34;: &amp;#34;3.7.2&amp;#34; }, { &amp;#34;Name&amp;#34;: &amp;#34;Spark&amp;#34;, &amp;#34;Version&amp;#34;: &amp;#34;2.4.0&amp;#34; }, { &amp;#34;Name&amp;#34;: &amp;#34;Zeppelin&amp;#34;, &amp;#34;Version&amp;#34;: &amp;#34;0.</description>
    </item>
    
    <item>
      <title>Spark on a local machine</title>
      <link>https://serge-m.github.io/posts/spark-on-a-local-machine/</link>
      <pubDate>Wed, 30 Jan 2019 08:30:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/spark-on-a-local-machine/</guid>
      <description>How to install spark locally Considering spark without hadoop built-in.
Download hadoop unpack to /opt/hadoop/ Download spark without hadoop, unpack to /opt/spark Install java. Set JAVA_HOVE environment variable. For example: export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 create environment variables required for spark to run. One can put those in .bashrc export HADOOP_HOME=/opt/hadoop export SPARK_DIST_CLASSPATH=$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/* Now you can run pyspark for example:
$ /opt/spark/bin/pyspark Python 2.7.12 (default, Nov 12 2018, 14:36:49) [GCC 5.4.0 20160609] on linux2 Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information.</description>
    </item>
    
    <item>
      <title>Spark in Docker with AWS credentials</title>
      <link>https://serge-m.github.io/posts/spark-in-docker-with-aws-credentials/</link>
      <pubDate>Sun, 29 Jul 2018 22:07:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/spark-in-docker-with-aws-credentials/</guid>
      <description>Running spark in docker container Setting up spark is tricky. Therefore it is useful to try out things locally before deploying to the cluster.
Docker is of a good help here. There is a great docker image to play with spark locally. gettyimages/docker-spark
Examples Running SparkPi sample program (one of the examples from the docs of Spark):
docker run --rm -it -p 4040:4040 gettyimages/spark bin/run-example SparkPi 10 Running a small example with Pyspark:</description>
    </item>
    
  </channel>
</rss>
