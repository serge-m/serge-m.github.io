<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sqlalchemy on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/sqlalchemy/</link>
    <description>Recent content in sqlalchemy on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 11 Jan 2018 22:02:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/sqlalchemy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flask and SQLAlchemy explained</title>
      <link>https://serge-m.github.io/posts/flask-and-sqlalchemy-explained/</link>
      <pubDate>Thu, 11 Jan 2018 22:02:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/flask-and-sqlalchemy-explained/</guid>
      <description>Awesome explanation of SQLAlchemy with examples and comparison to Django by Armin Ronacher: SQLAlchemy and You
Flask-SQLAlchemy module Flask-SQLAlchemy is an extension for Flask that adds support for SQLAlchemy to your application.
How to add SQLAlchemy to Flask application:
from flask import Flask from flask_sqlalchemy import SQLAlchemy app = Flask(__name__) # configuration of the DB is read from flask configuration storage app.config[&amp;#39;SQLALCHEMY_DATABASE_URI&amp;#39;] = &amp;#39;sqlite:////tmp/test.db&amp;#39; # here we define db object that keeps track of sql interactions db = SQLAlchemy(app) Now we are ready to define tables and objects using predefined db.</description>
    </item>
    
  </channel>
</rss>
