<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unittests on sergem&#39;s personal public notebook</title>
    <link>https://serge-m.github.io/tags/unittests/</link>
    <description>Recent content in unittests on sergem&#39;s personal public notebook</description>
    <image>
      <url>https://serge-m.github.io/papermod-cover.png</url>
      <link>https://serge-m.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 06 Mar 2017 00:01:00 +0000</lastBuildDate><atom:link href="https://serge-m.github.io/tags/unittests/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mocking in Python</title>
      <link>https://serge-m.github.io/posts/mocking-in-python/</link>
      <pubDate>Mon, 06 Mar 2017 00:01:00 +0000</pubDate>
      
      <guid>https://serge-m.github.io/posts/mocking-in-python/</guid>
      <description>Let&amp;rsquo;s consider how python standard unittest module suppose to use mocks.
Assume we want to test a method that creates and uses objects of other classes:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # content of module.py # classes that we want to mock class ClassName1: pass class ClassName2: pass # class that we want to test class ProductionClass: def foo(self, parameter1, parameter2): object1 = module.</description>
    </item>
    
  </channel>
</rss>
